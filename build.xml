<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="FindMusic">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="../../.p2/pool/plugins/org.junit_4.12.0.v201504281640/junit.jar"/>
        <pathelement location="../../.p2/pool/plugins/org.hamcrest.core_1.3.0.v201303031735.jar"/>
    </path>
    <path id="Maven Dependencies.libraryclasspath">
        <pathelement location="../../.m2/repository/org/jsoup/jsoup/1.10.3/jsoup-1.10.3.jar"/>
        <pathelement location="../../.m2/repository/commons-cli/commons-cli/1.4/commons-cli-1.4.jar"/>
        <pathelement location="../../.m2/repository/junit/junit/4.12/junit-4.12.jar"/>
        <pathelement location="../../.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar"/>
        <pathelement location="../../.m2/repository/mysql/mysql-connector-java/8.0.11/mysql-connector-java-8.0.11.jar"/>
        <pathelement location="../../.m2/repository/com/google/protobuf/protobuf-java/2.6.0/protobuf-java-2.6.0.jar"/>
        <pathelement location="../../.m2/repository/com/google/guava/guava/25.1-jre/guava-25.1-jre.jar"/>
        <pathelement location="../../.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar"/>
        <pathelement location="../../.m2/repository/org/checkerframework/checker-qual/2.0.0/checker-qual-2.0.0.jar"/>
        <pathelement location="../../.m2/repository/com/google/errorprone/error_prone_annotations/2.1.3/error_prone_annotations-2.1.3.jar"/>
        <pathelement location="../../.m2/repository/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar"/>
        <pathelement location="../../.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar"/>
        <pathelement location="../../.m2/repository/org/loadui/testFx/3.1.2/testFx-3.1.2.jar"/>
        <pathelement location="../../.m2/repository/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar"/>
        <pathelement location="../../.m2/repository/org/testfx/testfx-junit/4.0.1-alpha/testfx-junit-4.0.1-alpha.jar"/>
        <pathelement location="../../.m2/repository/org/testfx/testfx-core/4.0.1-alpha/testfx-core-4.0.1-alpha.jar"/>
    </path>
    <path id="FindMusic.classpath">
        <pathelement location="target/classes"/>
        <pathelement location="target/test-classes"/>
        <pathelement location="jsoup-1.10.3.jar"/>
        <pathelement location="mysql-connector-java-8.0.11/mysql-connector-java-8.0.11.jar"/>
        <pathelement location="junit-4.12.jar"/>
        <pathelement location="hamcrest-core-1.3.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="commons-cli-1.4.jar"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.ArrayListTest (3).classpath">
        <path refid="FindMusic.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.FindMusic.classpath">
        <path refid="FindMusic.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.SearchCLI.classpath">
        <path refid="FindMusic.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.SearchGUI.classpath">
        <path refid="FindMusic.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.SongStorage.classpath">
        <path refid="FindMusic.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.SongTest.classpath">
        <path refid="FindMusic.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.SorterTest (3).classpath">
        <path refid="FindMusic.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.SearchGUITest.classpath">
        <path refid="FindMusic.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="target/classes"/>
        <mkdir dir="target/test-classes"/>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src">
                <include name="**/*.java"/>
                <exclude name="**/*.ucls"/>
                <exclude name="**/*.useq"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/test-classes">
            <fileset dir="test">
                <exclude name="**/*.ucls"/>
                <exclude name="**/*.useq"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="target/classes"/>
        <delete dir="target/test-classes"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <include name="**/*.java"/>
            <classpath refid="FindMusic.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/test-classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="test"/>
            <classpath refid="FindMusic.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="ArrayListTest (3)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="personal.darius.dataStructures.ArrayListTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.ArrayListTest (3).classpath"/>
        </junit>
    </target>
    <target name="FindMusic">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="personal.darius.data.SongTest" todir="${junit.output.dir}"/>
            <test name="personal.darius.dataStructures.ArrayListTest" todir="${junit.output.dir}"/>
            <test name="personal.darius.search.SearchGUITest" todir="${junit.output.dir}"/>
            <test name="personal.darius.sort.SorterTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FindMusic.classpath"/>
        </junit>
    </target>
    <target name="SearchCLI">
        <java classname="personal.darius.search.SearchCLI" failonerror="true" fork="yes">
            <arg line="-s"/>
            <classpath refid="run.SearchCLI.classpath"/>
        </java>
    </target>
    <target name="SearchGUI">
        <java classname="personal.darius.search.SearchGUI" failonerror="true" fork="yes">
            <classpath refid="run.SearchGUI.classpath"/>
        </java>
    </target>
    <target name="SongStorage">
        <java classname="personal.darius.database.SongStorage" failonerror="true" fork="yes">
            <classpath refid="run.SongStorage.classpath"/>
        </java>
    </target>
    <target name="SongTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="personal.darius.data.SongTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.SongTest.classpath"/>
        </junit>
    </target>
    <target name="SorterTest (3)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="personal.darius.sort.SorterTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.SorterTest (3).classpath"/>
        </junit>
    </target>
    <target name="SearchGUITest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="personal.darius.search.SearchGUITest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.SearchGUITest.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
